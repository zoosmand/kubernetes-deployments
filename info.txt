kubectl create deployment hello-node --image=k8s.gcr.io/echoserver:1.4
kubectl get deployments
kubectl get pods
kubectl get events
kubectl config view
kubectl expose deployment hello-node --type=LoadBalancer --port=8080
kubectl get services
minikube service hello-node
minikube addons list
minikube addons enable metrics-server
kubectl get pod,svc -n kube-system
minikube addons disable metrics-server
kubectl delete service hello-node
kubectl delete deployment hello-node
kubectl delete service hello-node
minikube stop
minikube delete


kubectl proxy
export POD_NAME=$(kubectl get pods -o go-template --template '{{range .items}}{{.metadata.name}}{{"\n"}}{{end}')

kubectl describe pods
curl http://localhost:8001/api/v1/namespaces/default/pods/$POD_NAME/proxy/


kubectl exec $POD_NAME env
kubectl exec -it $POD_NAME bash




server.js
-----------------------------------------------
var http = require('http');
var requests=0;
var podname= process.env.HOSTNAME;
var startTime;
var host;
var handleRequest = function(request, response) {
  response.setHeader('Content-Type', 'text/plain');
  response.writeHead(200);
  response.write("Hello Kubernetes bootcamp! | Running on: ");
  response.write(host);
  response.end(" | v=1\n");
  console.log("Running On:" ,host, "| Total Requests:", ++requests,"| App Uptime:", (new Date() - startTime)/1000 , "seconds", "| Log Time:",new Date());
}
var www = http.createServer(handleRequest);
www.listen(8080,function () {
    startTime = new Date();;
    host = process.env.HOSTNAME;
    console.log ("Kubernetes Bootcamp App Started At:",startTime, "| Running On: " ,host, "\n" );
});
-----------------------------------------------




kubectl expose deployment/kubernetes-bootcamp --type="NodePort" --port 8080

export NODE_PORT=$(kubectl get services/kubernetes-bootcamp -o go-template='{{(index .spec.ports 0).nodePort}}')
curl $(minikube ip):$NODE_PORT

kubectl get pods -l run=kubernetes-bootcamp
export POD_NAME=$(kubectl get pods -o go-template --template '{{range .items}}{{.metadata.name}}{{"\n"}}{{end}}')
kubectl label pods  hello-tic-66988bc6b-rl9rf  v=0.0.1
kubectl describe pods -l v=0.0.1
kubectl describe pods $POD_NAME
kubectl delete service -l run=kubernetes-bootcamp
kubectl get services

kubectl exec -it $POD_NAME curl localhost:8080

kubectl exec -it hello-tic-784f5cdc5c-mjggf -- bash

kubectl logs deployments/hello-tic



kubectl get rs
kubectl scale deployments/kubernetes-bootcamp --replicas=4
kubectl get pods -o wide
kubectl describe pods hello-tic

kubectl set image deployments/hello-tic tictactoe=docker.io/zoosmand/tictactoe:v2

export NODE_PORT=$(kubectl get services/kubernetes-bootcamp -o go-template='{{(index .spec.ports 0).nodePort}}')
curl $(minikube ip):$NODE_PORT

kubectl set image deployments/kubernetes-bootcamp kubernetes-bootcamp=jocatalin/kubernetes-bootcamp:v2
export NODE_PORT=$(kubectl get services/kubernetes-bootcamp -o go-template='{{(index .spec.ports 0).nodePort}}')

curl $(minikube ip):$NODE_PORT
kubectl rollout status deployment/kubernetes-bootcamp

kubectl rollout undo deployment/kubernetes-bootcamp


kubectl apply -f ../hello-tic_service.yaml

kubectl port-forward service/hello-tic --address 0.0.0.0 80:80 --pod-running-timeout=1m0s
